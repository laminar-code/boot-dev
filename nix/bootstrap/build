#!/bin/bash
set -u

if [ -f ./.env ]; then
  . ./.env
elif [ -f $HOME/.env.boot-dev ]; then
  . $HOME/.env.boot-dev
else
  echo "ERROR: No .env file exists."
  exit 1
fi

if [ -z $USERNAME ]; then
  echo "ERROR: Environment variable USERNAME does not have a value."
  echo "Review .env.README for .env file format."
  exit 2
fi

if [ -z $GIT_UTILS_REPO ]; then
  echo "ERROR: Environment variable GIT_UTILS_REPO does not have a value."
  echo "Review .env.README for .env file format."
  exit 2
fi

if [ -z $GIT_UTILS_REPO_RAW ]; then
  echo "ERROR: Environment variable GIT_UTILS_REPO_RAW does not have a value."
  echo "Review .env.README for .env file format."
  exit 2
fi

if [ -z $GIT_BEARER_TOKEN ]; then
  echo "ERROR: Environment variable GIT_BEARER_TOKEN does not have a value."
  echo "Review .env.README for .env file format."
  exit 2
fi

if [ -z "$GIT_USER_NAME" ]; then
  echo "ERROR: Environment variable GIT_USER_NAME does not have a value."
  echo "Review .env.README for .env file format."
  exit 2
fi

if [ -z $GIT_USER_EMAIL ]; then
  echo "ERROR: Environment variable GIT_USER_EMAIL does not have a value."
  echo "Review .env.README for .env file format."
  exit 2
fi

if [ -z $HOME_NIX ]; then
  echo "ERROR: Environment variable HOME_NIX does not have a value."
  echo "Review .env.README for .env file format."
  exit 2
fi

if [ ! -f ./.env ]; then
  cp -p $HOME/.env.boot-dev ./.env
fi

export LOCAL_DIRECTORY="$HOME/container-host"
mkdir -p $LOCAL_DIRECTORY

DOCKER_COMPOSE=$(which docker-compose)
PODMAN=$(which podman)
DOCKER=$(which docker)

if [ -f $DOCKER_COMPOSE ]; then
  $DOCKER_COMPOSE build --no-cache
else
  if [ -f $PODMAN ]; then
    $PODMAN compose --no-cache build
  else
    $DOCKER compose build --no-cache
  fi
fi
